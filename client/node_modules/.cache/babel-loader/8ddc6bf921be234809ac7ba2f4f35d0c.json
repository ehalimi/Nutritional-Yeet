{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport ButtonGroup from './ButtonGroup';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: PropTypes.string,\n  /** An `href` passed to the non-toggle Button */\n  href: PropTypes.string,\n  /** An anchor `target` passed to the non-toggle Button */\n  target: PropTypes.string,\n  /** An `onClick` handler passed to the non-toggle Button */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** A `type` passed to the non-toggle Button */\n  type: PropTypes.string,\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n  /** @ignore */\n  variant: PropTypes.string,\n  /** @ignore */\n  size: PropTypes.string\n};\nvar defaultProps = {\n  toggleLabel: 'Toggle dropdown',\n  type: 'button'\n};\nvar SplitButton = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n    bsPrefix = _ref.bsPrefix,\n    size = _ref.size,\n    variant = _ref.variant,\n    title = _ref.title,\n    type = _ref.type,\n    toggleLabel = _ref.toggleLabel,\n    children = _ref.children,\n    onClick = _ref.onClick,\n    href = _ref.href,\n    target = _ref.target,\n    menuRole = _ref.menuRole,\n    renderMenuOnMount = _ref.renderMenuOnMount,\n    rootCloseEvent = _ref.rootCloseEvent,\n    props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"size\", \"variant\", \"title\", \"type\", \"toggleLabel\", \"children\", \"onClick\", \"href\", \"target\", \"menuRole\", \"renderMenuOnMount\", \"rootCloseEvent\"]);\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    as: ButtonGroup\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    bsPrefix: bsPrefix,\n    href: href,\n    target: target,\n    onClick: onClick,\n    type: type\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    split: true,\n    id: id,\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    childBsPrefix: bsPrefix\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, toggleLabel)), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nSplitButton.propTypes = propTypes;\nSplitButton.defaultProps = defaultProps;\nSplitButton.displayName = 'SplitButton';\nexport default SplitButton;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","Button","ButtonGroup","Dropdown","propTypes","id","any","toggleLabel","string","href","target","onClick","func","title","node","isRequired","type","disabled","bool","menuRole","renderMenuOnMount","rootCloseEvent","bsPrefix","variant","size","defaultProps","SplitButton","forwardRef","_ref","ref","children","props","createElement","as","Toggle","split","childBsPrefix","className","Menu","role","renderOnMount","displayName"],"sources":["/Users/emahalimi/projects/Nutritional-Yeet/client/node_modules/react-bootstrap/esm/SplitButton.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport ButtonGroup from './ButtonGroup';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: PropTypes.string,\n\n  /** An `href` passed to the non-toggle Button */\n  href: PropTypes.string,\n\n  /** An anchor `target` passed to the non-toggle Button */\n  target: PropTypes.string,\n\n  /** An `onClick` handler passed to the non-toggle Button */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** A `type` passed to the non-toggle Button */\n  type: PropTypes.string,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\nvar defaultProps = {\n  toggleLabel: 'Toggle dropdown',\n  type: 'button'\n};\nvar SplitButton = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      variant = _ref.variant,\n      title = _ref.title,\n      type = _ref.type,\n      toggleLabel = _ref.toggleLabel,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      href = _ref.href,\n      target = _ref.target,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      rootCloseEvent = _ref.rootCloseEvent,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"size\", \"variant\", \"title\", \"type\", \"toggleLabel\", \"children\", \"onClick\", \"href\", \"target\", \"menuRole\", \"renderMenuOnMount\", \"rootCloseEvent\"]);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    as: ButtonGroup\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    bsPrefix: bsPrefix,\n    href: href,\n    target: target,\n    onClick: onClick,\n    type: type\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    split: true,\n    id: id,\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    childBsPrefix: bsPrefix\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, toggleLabel)), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nSplitButton.propTypes = propTypes;\nSplitButton.defaultProps = defaultProps;\nSplitButton.displayName = 'SplitButton';\nexport default SplitButton;"],"mappings":"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"},"metadata":{},"sourceType":"module"}