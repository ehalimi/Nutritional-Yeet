{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string.isRequired,\n  as: PropTypes.elementType\n};\nvar defaultProps = {\n  type: 'valid'\n};\nvar Feedback = React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    className = _ref.className,\n    type = _ref.type,\n    props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"type\"]);\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, type && type + \"-feedback\")\n  }));\n});\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nFeedback.defaultProps = defaultProps;\nexport default Feedback;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","classNames","React","PropTypes","propTypes","type","string","isRequired","as","elementType","defaultProps","Feedback","forwardRef","_ref","ref","_ref$as","Component","className","props","createElement","displayName"],"sources":["/Users/emahalimi/projects/book-search/client/node_modules/react-bootstrap/esm/Feedback.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string.isRequired,\n  as: PropTypes.elementType\n};\nvar defaultProps = {\n  type: 'valid'\n};\nvar Feedback = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      type = _ref.type,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"type\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, type && type + \"-feedback\")\n  }));\n});\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nFeedback.defaultProps = defaultProps;\nexport default Feedback;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,IAAIC,SAAS,GAAG;EACd;AACF;AACA;AACA;AACA;EACEC,IAAI,EAAEF,SAAS,CAACG,MAAM,CAACC,UAAU;EACjCC,EAAE,EAAEL,SAAS,CAACM;AAChB,CAAC;AACD,IAAIC,YAAY,GAAG;EACjBL,IAAI,EAAE;AACR,CAAC;AACD,IAAIM,QAAQ,GAAGT,KAAK,CAACU,UAAU;AAAE;AACjC,UAAUC,IAAI,EAAEC,GAAG,EAAE;EACnB,IAAIC,OAAO,GAAGF,IAAI,CAACL,EAAE;IACjBQ,SAAS,GAAGD,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,OAAO;IAChDE,SAAS,GAAGJ,IAAI,CAACI,SAAS;IAC1BZ,IAAI,GAAGQ,IAAI,CAACR,IAAI;IAChBa,KAAK,GAAGlB,6BAA6B,CAACa,IAAI,EAAE,CAAC,IAAI,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;EAE5E,OAAO,aAAaX,KAAK,CAACiB,aAAa,CAACH,SAAS,EAAEjB,QAAQ,CAAC,CAAC,CAAC,EAAEmB,KAAK,EAAE;IACrEJ,GAAG,EAAEA,GAAG;IACRG,SAAS,EAAEhB,UAAU,CAACgB,SAAS,EAAEZ,IAAI,IAAIA,IAAI,GAAG,WAAW;EAC7D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACFM,QAAQ,CAACS,WAAW,GAAG,UAAU;AACjCT,QAAQ,CAACP,SAAS,GAAGA,SAAS;AAC9BO,QAAQ,CAACD,YAAY,GAAGA,YAAY;AACpC,eAAeC,QAAQ"},"metadata":{},"sourceType":"module"}