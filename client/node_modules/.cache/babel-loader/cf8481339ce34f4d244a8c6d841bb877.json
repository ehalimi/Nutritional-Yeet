{"ast":null,"code":"var _jsxFileName = \"/Users/emahalimi/projects/book-search/client/src/pages/SavedBooks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { REMOVE_BOOK } from '../utils/mutation';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { QUERY_ME } from '../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SavedBooks = () => {\n  _s();\n  const [userData, setUserData] = useState({});\n  const [getMe, {\n    error: meError\n  }] = useLazyQuery(QUERY_ME);\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const [removeBookMutation, {\n    error\n  }] = useMutation(REMOVE_BOOK);\n  const userDataLength = Object.keys(userData).length;\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n        if (!token) {\n          return false;\n        }\n        const response = await getMe();\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n        const user = await response.json();\n        setUserData(user);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getUserData();\n  }, [userDataLength]);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async bookId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      const response = await removeBookMutation({\n        variables: {\n          bookId\n        }\n      });\n      if (!response.data) {\n        throw new Error('something went wrong!');\n      }\n      setUserData(response.data.removeBook.user);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved books!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:` : 'You have no saved books!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: userData.savedBooks.map(book => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: book.image,\n              alt: `The cover for ${book.title}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 31\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: [\"Authors: \", book.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: book.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteBook(book.bookId),\n                children: \"Delete this Book!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, book.bookId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SavedBooks, \"M5TvFvcCqs1ltmkt2axQxNMbfy4=\", true, function () {\n  return [useMutation];\n});\n_c = SavedBooks;\nexport default SavedBooks;\nvar _c;\n$RefreshReg$(_c, \"SavedBooks\");","map":{"version":3,"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","REMOVE_BOOK","Auth","removeBookId","useMutation","useQuery","QUERY_ME","SavedBooks","userData","setUserData","getMe","error","meError","useLazyQuery","removeBookMutation","userDataLength","Object","keys","length","getUserData","token","loggedIn","getToken","response","ok","Error","user","json","err","console","handleDeleteBook","bookId","variables","data","removeBook","savedBooks","map","book","image","title","authors","description"],"sources":["/Users/emahalimi/projects/book-search/client/src/pages/SavedBooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { REMOVE_BOOK } from '../utils/mutation';\n\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { QUERY_ME } from '../utils/queries';\n\nconst SavedBooks = () => {\n  const [userData, setUserData] = useState({});\n  const [getMe, { error: meError }] = useLazyQuery(QUERY_ME);\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const [removeBookMutation, { error }] = useMutation(REMOVE_BOOK);\n  const userDataLength = Object.keys(userData).length;\n\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n\n        const response = await getMe();\n\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n\n        const user = await response.json();\n        setUserData(user);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getUserData();\n  }, [userDataLength]);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await removeBookMutation({\n        variables: { bookId }\n      });\n\n      if (!response.data) {\n        throw new Error('something went wrong!');\n      }\n\n      setUserData(response.data.removeBook.user);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}