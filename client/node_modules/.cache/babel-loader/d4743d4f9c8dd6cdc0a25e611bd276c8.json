{"ast":null,"code":"var _jsxFileName = \"/Users/emahalimi/projects/book-search/client/src/pages/SearchBooks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport { ADD_BOOK } from '../utils/mutation';\nimport { useMutation } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchBooks = () => {\n  _s();\n  const [addBookMutation] = useMutation(ADD_BOOK);\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    if (!searchInput) {\n      return false;\n    }\n    try {\n      const response = await searchGoogleBooks(searchInput);\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n      const {\n        items\n      } = await response.json();\n      const bookData = items.map(book => {\n        var _book$volumeInfo$imag;\n        return {\n          bookId: book.id,\n          authors: book.volumeInfo.authors || ['No author to display'],\n          title: book.volumeInfo.title,\n          description: book.volumeInfo.description,\n          image: ((_book$volumeInfo$imag = book.volumeInfo.imageLinks) === null || _book$volumeInfo$imag === void 0 ? void 0 : _book$volumeInfo$imag.thumbnail) || ''\n        };\n      });\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async bookId => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find(book => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      await saveBook({\n        variables: {\n          content: bookToSave\n        }\n      });\n      console.log(\"book to save\", bookToSave);\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Search for Books!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleFormSubmit,\n          children: /*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 8,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"searchInput\",\n                value: searchInput,\n                onChange: e => setSearchInput(e.target.value),\n                type: \"text\",\n                size: \"lg\",\n                placeholder: \"Search for a book\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"success\",\n                size: \"lg\",\n                children: \"Submit Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: searchedBooks.length ? `Viewing ${searchedBooks.length} results:` : 'Search for a book to begin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: searchedBooks.map(book => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: book.image,\n              alt: `The cover for ${book.title}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: [\"Authors: \", book.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: book.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), Auth.loggedIn() && /*#__PURE__*/_jsxDEV(Button, {\n                disabled: savedBookIds === null || savedBookIds === void 0 ? void 0 : savedBookIds.some(savedBookId => savedBookId === book.bookId),\n                className: \"btn-block btn-info\",\n                onClick: () => handleSaveBook(book.bookId),\n                children: savedBookIds !== null && savedBookIds !== void 0 && savedBookIds.some(savedBookId => savedBookId === book.bookId) ? 'This book has already been saved!' : 'Save this Book!'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)]\n          }, book.bookId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SearchBooks, \"nhyuqevf4Zai9WcDy3TDg6G66z8=\", false, function () {\n  return [useMutation];\n});\n_c = SearchBooks;\nexport default SearchBooks;\nvar _c;\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"names":["React","useState","useEffect","Jumbotron","Container","Col","Form","Button","Card","CardColumns","Auth","searchGoogleBooks","saveBookIds","getSavedBookIds","ADD_BOOK","useMutation","SearchBooks","addBookMutation","searchedBooks","setSearchedBooks","searchInput","setSearchInput","savedBookIds","setSavedBookIds","handleFormSubmit","event","preventDefault","response","ok","Error","items","json","bookData","map","book","bookId","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","err","console","error","handleSaveBook","bookToSave","find","token","loggedIn","getToken","saveBook","variables","content","log","e","target","value","length","some","savedBookId"],"sources":["/Users/emahalimi/projects/book-search/client/src/pages/SearchBooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport { ADD_BOOK } from '../utils/mutation';\nimport { useMutation } from '@apollo/client';\n\nconst SearchBooks = () => {\n  const [addBookMutation] = useMutation(ADD_BOOK);\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await saveBook({\n        variables: {content: bookToSave}\n      })\n      console.log(\"book to save\", bookToSave)\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}