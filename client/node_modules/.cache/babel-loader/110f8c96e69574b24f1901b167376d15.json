{"ast":null,"code":"import _classCallCheck from \"/Users/emahalimi/projects/book-search/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/emahalimi/projects/book-search/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport var Source = /*#__PURE__*/function (_Symbol$toStringTag) {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    _classCallCheck(this, Source);\n    typeof body === 'string' || devAssert(false, \"Body must be a string. Received: \".concat(inspect(body), \".\"));\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(false, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(false, 'column in locationOffset is 1-indexed and must be positive.');\n  }\n  _createClass(Source, [{\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n  return Source;\n}(Symbol.toStringTag);\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}","map":{"version":3,"names":["devAssert","inspect","instanceOf","Source","body","name","locationOffset","line","column","Symbol","toStringTag","isSource","source"],"sources":["/Users/emahalimi/projects/book-search/client/node_modules/graphql/language/source.mjs"],"sourcesContent":["import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,0BAA0B;AACpD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,UAAU,QAAQ,2BAA2B;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAaC,MAAM;EACjB,gBACEC,IAAI,EAMJ;IAAA,IALAC,IAAI,uEAAG,iBAAiB;IAAA,IACxBC,cAAc,uEAAG;MACfC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE;IACV,CAAC;IAAA;IAED,OAAOJ,IAAI,KAAK,QAAQ,IACtBJ,SAAS,CAAC,KAAK,6CAAsCC,OAAO,CAACG,IAAI,CAAC,OAAI;IACxE,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACA,cAAc,CAACC,IAAI,GAAG,CAAC,IAC1BP,SAAS,CACP,KAAK,EACL,2DAA2D,CAC5D;IACH,IAAI,CAACM,cAAc,CAACE,MAAM,GAAG,CAAC,IAC5BR,SAAS,CACP,KAAK,EACL,6DAA6D,CAC9D;EACL;EAAC;IAAA;IAAA,KAED,eAA2B;MACzB,OAAO,QAAQ;IACjB;EAAC;EAAA;AAAA,EAFIS,MAAM,CAACC,WAAW;AAIzB;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,QAAQ,CAACC,MAAM,EAAE;EAC/B,OAAOV,UAAU,CAACU,MAAM,EAAET,MAAM,CAAC;AACnC"},"metadata":{},"sourceType":"module"}