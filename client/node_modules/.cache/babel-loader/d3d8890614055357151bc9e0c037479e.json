{"ast":null,"code":"var _jsxFileName = \"/Users/emahalimi/projects/Nutritional-Yeet/client/src/pages/SavedFoods.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { REMOVE_FOOD } from '../utils/mutation';\nimport Auth from '../utils/auth';\nimport { removeFoodId } from '../utils/localStorage';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SavedFoods = () => {\n  _s();\n  const {\n    loading,\n    data\n  } = useQuery(GET_ME);\n  const userData = (data === null || data === void 0 ? void 0 : data.me) || {};\n  const [deleteFood] = useMutation(REMOVE_FOOD, {\n    update(cache) {\n      try {\n        const {\n          me\n        } = cache.readQuery({\n          query: GET_ME\n        });\n        cache.modify({\n          id: cache.identify(me),\n          fields: {\n            SavedFoods(_ref) {\n              let {\n                DELETE\n              } = _ref;\n              return DELETE;\n            }\n          }\n        });\n      } catch (e) {\n        console.warn(\"Something went wrong with cache update\");\n      }\n    }\n  });\n\n  // create function that accepts the food's mongo _id value as param and deletes the food from the database\n  const handleDeleteFood = async foodId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      await deleteFood({\n        variables: {\n          foodId: foodId\n        }\n      });\n      // upon success, remove food's id from localStorage\n      removeFoodId(foodId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved foods!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.SavedFoods.length ? `Viewing ${userData.SavedFoods.length} saved ${userData.SavedFoods.length === 1 ? 'food' : 'foods'}:` : 'You have no saved foods!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: userData.SavedFoods.map(food => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [food.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: food.image,\n              alt: `The cover for ${food.title}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 31\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: food.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: [\"Authors: \", food.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: food.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteFood(food.foodId),\n                children: \"Delete this food!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, food.foodId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SavedFoods, \"pV4ZhDcurKxfkpww0/MyIcYgMe8=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = SavedFoods;\nexport default SavedFoods;\nvar _c;\n$RefreshReg$(_c, \"SavedFoods\");","map":{"version":3,"names":["React","Jumbotron","Container","CardColumns","Card","Button","REMOVE_FOOD","Auth","removeFoodId","useMutation","useQuery","GET_ME","SavedFoods","loading","data","userData","me","deleteFood","update","cache","readQuery","query","modify","id","identify","fields","DELETE","e","console","warn","handleDeleteFood","foodId","token","loggedIn","getToken","variables","err","error","length","map","food","image","title","authors","description"],"sources":["/Users/emahalimi/projects/Nutritional-Yeet/client/src/pages/SavedFoods.js"],"sourcesContent":["import React from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { REMOVE_FOOD } from '../utils/mutation';\n\nimport Auth from '../utils/auth';\nimport { removeFoodId } from '../utils/localStorage';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\n\nconst SavedFoods = () => {\n\n  const { loading, data} = useQuery(GET_ME)\n  const userData = data?.me || {}\n  \n  const [deleteFood] = useMutation(REMOVE_FOOD, {\n    update(cache) {\n      try {\n        const { me } = cache.readQuery({ query: GET_ME})\n        cache.modify({\n          id: cache.identify(me),\n          fields: {\n            SavedFoods({DELETE}) {\n              return DELETE;\n            }\n          }\n        })\n    } catch (e) {\n      console.warn(\"Something went wrong with cache update\")\n    }\n}})\n\n  // create function that accepts the food's mongo _id value as param and deletes the food from the database\n  const handleDeleteFood = async (foodId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await deleteFood({\n        variables: {foodId: foodId}\n      })\n      // upon success, remove food's id from localStorage\n      removeFoodId(foodId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved foods!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.SavedFoods.length\n            ? `Viewing ${userData.SavedFoods.length} saved ${userData.SavedFoods.length === 1 ? 'food' : 'foods'}:`\n            : 'You have no saved foods!'}\n        </h2>\n        <CardColumns>\n          {userData.SavedFoods.map((food) => {\n            return (\n              <Card key={food.foodId} border='dark'>\n                {food.image ? <Card.Img src={food.image} alt={`The cover for ${food.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{food.title}</Card.Title>\n                  <p className='small'>Authors: {food.authors}</p>\n                  <Card.Text>{food.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteFood(food.foodId)}>\n                    Delete this food!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedFoods;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}