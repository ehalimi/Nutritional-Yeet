{"ast":null,"code":"import _slicedToArray from \"/Users/emahalimi/projects/book-search/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/emahalimi/projects/book-search/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = ''.padStart(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum, \" |\"), subLines[0]]].concat(_toConsumableArray(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['|', subLine];\n    })), [['|', '^'.padStart(subLineColumnNum)], ['|', subLines[subLineIndex + 1]]]));\n  }\n  return locationStr + printPrefixedLines([\n  // Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1, \" |\"), lines[lineIndex - 1]], [\"\".concat(lineNum, \" |\"), locationLine], ['|', '^'.padStart(columnNum)], [\"\".concat(lineNum + 1, \" |\"), lines[lineIndex + 1]]]);\n}\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      _ = _ref2[0],\n      line = _ref2[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, _toConsumableArray(existingLines.map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 1),\n      prefix = _ref4[0];\n    return prefix.length;\n  })));\n  return existingLines.map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n      prefix = _ref6[0],\n      line = _ref6[1];\n    return prefix.padStart(padLen) + (line ? ' ' + line : '');\n  }).join('\\n');\n}","map":{"version":3,"names":["getLocation","printLocation","location","printSourceLocation","source","start","sourceLocation","firstLineColumnOffset","locationOffset","column","body","padStart","lineIndex","line","lineOffset","lineNum","columnOffset","columnNum","locationStr","name","lines","split","locationLine","length","subLineIndex","Math","floor","subLineColumnNum","subLines","i","push","slice","printPrefixedLines","map","subLine","existingLines","filter","_","undefined","padLen","max","prefix","join"],"sources":["/Users/emahalimi/projects/book-search/client/node_modules/graphql/language/printLocation.mjs"],"sourcesContent":["import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}