{"ast":null,"code":"import addClass from 'dom-helpers/addClass';\nimport removeClass from 'dom-helpers/removeClass';\nimport css from 'dom-helpers/css';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport isOverflowing from './isOverflowing';\nimport { ariaHidden, hideSiblings, showSiblings } from './manageAriaHidden';\nfunction findIndexOf(arr, cb) {\n  var idx = -1;\n  arr.some(function (d, i) {\n    if (cb(d, i)) {\n      idx = i;\n      return true;\n    }\n    return false;\n  });\n  return idx;\n}\n\n/**\n * Proper state management for containers and the modals in those containers.\n *\n * @internal Used by the Modal to ensure proper styling of containers.\n */\nvar ModalManager = /*#__PURE__*/function () {\n  function ModalManager(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n      _ref$hideSiblingNodes = _ref.hideSiblingNodes,\n      hideSiblingNodes = _ref$hideSiblingNodes === void 0 ? true : _ref$hideSiblingNodes,\n      _ref$handleContainerO = _ref.handleContainerOverflow,\n      handleContainerOverflow = _ref$handleContainerO === void 0 ? true : _ref$handleContainerO;\n    this.hideSiblingNodes = void 0;\n    this.handleContainerOverflow = void 0;\n    this.modals = void 0;\n    this.containers = void 0;\n    this.data = void 0;\n    this.scrollbarSize = void 0;\n    this.hideSiblingNodes = hideSiblingNodes;\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.modals = [];\n    this.containers = [];\n    this.data = [];\n    this.scrollbarSize = getScrollbarSize();\n  }\n  var _proto = ModalManager.prototype;\n  _proto.isContainerOverflowing = function isContainerOverflowing(modal) {\n    var data = this.data[this.containerIndexFromModal(modal)];\n    return data && data.overflowing;\n  };\n  _proto.containerIndexFromModal = function containerIndexFromModal(modal) {\n    return findIndexOf(this.data, function (d) {\n      return d.modals.indexOf(modal) !== -1;\n    });\n  };\n  _proto.setContainerStyle = function setContainerStyle(containerState, container) {\n    var style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    containerState.style = {\n      overflow: container.style.overflow,\n      paddingRight: container.style.paddingRight\n    };\n    if (containerState.overflowing) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style.paddingRight = parseInt(css(container, 'paddingRight') || '0', 10) + this.scrollbarSize + \"px\";\n    }\n    css(container, style);\n  };\n  _proto.removeContainerStyle = function removeContainerStyle(containerState, container) {\n    var style = containerState.style;\n    Object.keys(style).forEach(function (key) {\n      container.style[key] = style[key];\n    });\n  };\n  _proto.add = function add(modal, container, className) {\n    var modalIdx = this.modals.indexOf(modal);\n    var containerIdx = this.containers.indexOf(container);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    if (this.hideSiblingNodes) {\n      hideSiblings(container, modal);\n    }\n    if (containerIdx !== -1) {\n      this.data[containerIdx].modals.push(modal);\n      return modalIdx;\n    }\n    var data = {\n      modals: [modal],\n      // right now only the first modal of a container will have its classes applied\n      classes: className ? className.split(/\\s+/) : [],\n      overflowing: isOverflowing(container)\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(data, container);\n    }\n    data.classes.forEach(addClass.bind(null, container));\n    this.containers.push(container);\n    this.data.push(data);\n    return modalIdx;\n  };\n  _proto.remove = function remove(modal) {\n    var modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    var containerIdx = this.containerIndexFromModal(modal);\n    var data = this.data[containerIdx];\n    var container = this.containers[containerIdx];\n    data.modals.splice(data.modals.indexOf(modal), 1);\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (data.modals.length === 0) {\n      data.classes.forEach(removeClass.bind(null, container));\n      if (this.handleContainerOverflow) {\n        this.removeContainerStyle(data, container);\n      }\n      if (this.hideSiblingNodes) {\n        showSiblings(container, modal);\n      }\n      this.containers.splice(containerIdx, 1);\n      this.data.splice(containerIdx, 1);\n    } else if (this.hideSiblingNodes) {\n      // otherwise make sure the next top modal is visible to a SR\n      var _data$modals = data.modals[data.modals.length - 1],\n        backdrop = _data$modals.backdrop,\n        dialog = _data$modals.dialog;\n      ariaHidden(false, dialog);\n      ariaHidden(false, backdrop);\n    }\n  };\n  _proto.isTopModal = function isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  };\n  return ModalManager;\n}();\nexport default ModalManager;","map":{"version":3,"names":["addClass","removeClass","css","getScrollbarSize","isOverflowing","ariaHidden","hideSiblings","showSiblings","findIndexOf","arr","cb","idx","some","d","i","ModalManager","_temp","_ref","_ref$hideSiblingNodes","hideSiblingNodes","_ref$handleContainerO","handleContainerOverflow","modals","containers","data","scrollbarSize","_proto","prototype","isContainerOverflowing","modal","containerIndexFromModal","overflowing","indexOf","setContainerStyle","containerState","container","style","overflow","paddingRight","parseInt","removeContainerStyle","Object","keys","forEach","key","add","className","modalIdx","containerIdx","length","push","classes","split","bind","remove","splice","_data$modals","backdrop","dialog","isTopModal"],"sources":["/Users/emahalimi/projects/book-search/client/node_modules/react-overlays/esm/ModalManager.js"],"sourcesContent":["import addClass from 'dom-helpers/addClass';\nimport removeClass from 'dom-helpers/removeClass';\nimport css from 'dom-helpers/css';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport isOverflowing from './isOverflowing';\nimport { ariaHidden, hideSiblings, showSiblings } from './manageAriaHidden';\n\nfunction findIndexOf(arr, cb) {\n  var idx = -1;\n  arr.some(function (d, i) {\n    if (cb(d, i)) {\n      idx = i;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\n/**\n * Proper state management for containers and the modals in those containers.\n *\n * @internal Used by the Modal to ensure proper styling of containers.\n */\nvar ModalManager = /*#__PURE__*/function () {\n  function ModalManager(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$hideSiblingNodes = _ref.hideSiblingNodes,\n        hideSiblingNodes = _ref$hideSiblingNodes === void 0 ? true : _ref$hideSiblingNodes,\n        _ref$handleContainerO = _ref.handleContainerOverflow,\n        handleContainerOverflow = _ref$handleContainerO === void 0 ? true : _ref$handleContainerO;\n\n    this.hideSiblingNodes = void 0;\n    this.handleContainerOverflow = void 0;\n    this.modals = void 0;\n    this.containers = void 0;\n    this.data = void 0;\n    this.scrollbarSize = void 0;\n    this.hideSiblingNodes = hideSiblingNodes;\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.modals = [];\n    this.containers = [];\n    this.data = [];\n    this.scrollbarSize = getScrollbarSize();\n  }\n\n  var _proto = ModalManager.prototype;\n\n  _proto.isContainerOverflowing = function isContainerOverflowing(modal) {\n    var data = this.data[this.containerIndexFromModal(modal)];\n    return data && data.overflowing;\n  };\n\n  _proto.containerIndexFromModal = function containerIndexFromModal(modal) {\n    return findIndexOf(this.data, function (d) {\n      return d.modals.indexOf(modal) !== -1;\n    });\n  };\n\n  _proto.setContainerStyle = function setContainerStyle(containerState, container) {\n    var style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    containerState.style = {\n      overflow: container.style.overflow,\n      paddingRight: container.style.paddingRight\n    };\n\n    if (containerState.overflowing) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style.paddingRight = parseInt(css(container, 'paddingRight') || '0', 10) + this.scrollbarSize + \"px\";\n    }\n\n    css(container, style);\n  };\n\n  _proto.removeContainerStyle = function removeContainerStyle(containerState, container) {\n    var style = containerState.style;\n    Object.keys(style).forEach(function (key) {\n      container.style[key] = style[key];\n    });\n  };\n\n  _proto.add = function add(modal, container, className) {\n    var modalIdx = this.modals.indexOf(modal);\n    var containerIdx = this.containers.indexOf(container);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n\n    if (this.hideSiblingNodes) {\n      hideSiblings(container, modal);\n    }\n\n    if (containerIdx !== -1) {\n      this.data[containerIdx].modals.push(modal);\n      return modalIdx;\n    }\n\n    var data = {\n      modals: [modal],\n      // right now only the first modal of a container will have its classes applied\n      classes: className ? className.split(/\\s+/) : [],\n      overflowing: isOverflowing(container)\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(data, container);\n    }\n\n    data.classes.forEach(addClass.bind(null, container));\n    this.containers.push(container);\n    this.data.push(data);\n    return modalIdx;\n  };\n\n  _proto.remove = function remove(modal) {\n    var modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    var containerIdx = this.containerIndexFromModal(modal);\n    var data = this.data[containerIdx];\n    var container = this.containers[containerIdx];\n    data.modals.splice(data.modals.indexOf(modal), 1);\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (data.modals.length === 0) {\n      data.classes.forEach(removeClass.bind(null, container));\n\n      if (this.handleContainerOverflow) {\n        this.removeContainerStyle(data, container);\n      }\n\n      if (this.hideSiblingNodes) {\n        showSiblings(container, modal);\n      }\n\n      this.containers.splice(containerIdx, 1);\n      this.data.splice(containerIdx, 1);\n    } else if (this.hideSiblingNodes) {\n      // otherwise make sure the next top modal is visible to a SR\n      var _data$modals = data.modals[data.modals.length - 1],\n          backdrop = _data$modals.backdrop,\n          dialog = _data$modals.dialog;\n      ariaHidden(false, dialog);\n      ariaHidden(false, backdrop);\n    }\n  };\n\n  _proto.isTopModal = function isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  };\n\n  return ModalManager;\n}();\n\nexport default ModalManager;"],"mappings":"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"},"metadata":{},"sourceType":"module"}