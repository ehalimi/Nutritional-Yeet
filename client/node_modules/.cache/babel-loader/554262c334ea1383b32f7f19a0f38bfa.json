{"ast":null,"code":"var _jsxFileName = \"/Users/emahalimi/projects/book-search/client/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\n// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutation';\nimport Auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [userFormData, setUserFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [loginUserMutation, {\n    error\n  }] = useMutation(LOGIN_USER);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserFormData({\n      ...userFormData,\n      [name]: value\n    });\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    try {\n      const response = await loginUserMutation({\n        variables: userFormData\n      });\n      if (!response.data) {\n        throw new Error('something went wrong!');\n      }\n      const {\n        token,\n        user\n      } = await response.data.addUser;\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      setShowAlert(true);\n    }\n    setUserFormData({\n      username: '',\n      email: '',\n      password: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        dismissible: true,\n        onClose: () => setShowAlert(false),\n        show: showAlert,\n        variant: \"danger\",\n        children: \"Something went wrong with your login credentials!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Your email\",\n          name: \"email\",\n          onChange: handleInputChange,\n          value: userFormData.email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Email is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Your password\",\n          name: \"password\",\n          onChange: handleInputChange,\n          value: userFormData.password,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Password is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !(userFormData.email && userFormData.password),\n        type: \"submit\",\n        variant: \"success\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(LoginForm, \"/fZJCcwTfT62g3TmuHlealS6ADw=\", false, function () {\n  return [useMutation];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Form","Button","Alert","useMutation","LOGIN_USER","Auth","LoginForm","userFormData","setUserFormData","email","password","validated","showAlert","setShowAlert","loginUserMutation","error","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","response","variables","data","Error","token","user","addUser","console","log","login","err","username"],"sources":["/Users/emahalimi/projects/book-search/client/src/components/LoginForm.js"],"sourcesContent":["// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutation';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [loginUserMutation, { error }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await loginUserMutation({\n        variables: userFormData\n      });\n\n      if (!response.data) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.data.addUser;\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,MAAM,EAAEC,KAAK,QAAQ,iBAAiB;AACrD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,OAAOC,IAAI,MAAM,eAAe;AAAC;AAAA;AAEjC,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC;IAAEU,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC7E,MAAM,CAACC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,iBAAiB,EAAE;IAAEC;EAAM,CAAC,CAAC,GAAGZ,WAAW,CAACC,UAAU,CAAC;EAE9D,MAAMY,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCZ,eAAe,CAAC;MAAE,GAAGD,YAAY;MAAE,CAACW,IAAI,GAAGC;IAAM,CAAC,CAAC;EACrD,CAAC;EAED,MAAME,gBAAgB,GAAG,MAAOJ,KAAK,IAAK;IACxCA,KAAK,CAACK,cAAc,EAAE;;IAEtB;IACA,MAAMC,IAAI,GAAGN,KAAK,CAACO,aAAa;IAChC,IAAID,IAAI,CAACE,aAAa,EAAE,KAAK,KAAK,EAAE;MAClCR,KAAK,CAACK,cAAc,EAAE;MACtBL,KAAK,CAACS,eAAe,EAAE;IACzB;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,iBAAiB,CAAC;QACvCc,SAAS,EAAErB;MACb,CAAC,CAAC;MAEF,IAAI,CAACoB,QAAQ,CAACE,IAAI,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEA,MAAM;QAAEC,KAAK;QAAEC;MAAK,CAAC,GAAG,MAAML,QAAQ,CAACE,IAAI,CAACI,OAAO;MACnDC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB3B,IAAI,CAAC+B,KAAK,CAACL,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZxB,YAAY,CAAC,IAAI,CAAC;IACpB;IAEAL,eAAe,CAAC;MACd8B,QAAQ,EAAE,EAAE;MACZ7B,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,UAAU;MAAC,SAAS,EAAEC,SAAU;MAAC,QAAQ,EAAEU,gBAAiB;MAAA,wBAChE,QAAC,KAAK;QAAC,WAAW;QAAC,OAAO,EAAE,MAAMR,YAAY,CAAC,KAAK,CAAE;QAAC,IAAI,EAAED,SAAU;QAAC,OAAO,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEhF,eACR,QAAC,IAAI,CAAC,KAAK;QAAA,wBACT,QAAC,IAAI,CAAC,KAAK;UAAC,OAAO,EAAC,OAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB,eAC9C,QAAC,IAAI,CAAC,OAAO;UACX,IAAI,EAAC,MAAM;UACX,WAAW,EAAC,YAAY;UACxB,IAAI,EAAC,OAAO;UACZ,QAAQ,EAAEI,iBAAkB;UAC5B,KAAK,EAAET,YAAY,CAACE,KAAM;UAC1B,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACR,eACF,QAAC,IAAI,CAAC,OAAO,CAAC,QAAQ;UAAC,IAAI,EAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA2C;MAAA;QAAA;QAAA;QAAA;MAAA,QACrE,eAEb,QAAC,IAAI,CAAC,KAAK;QAAA,wBACT,QAAC,IAAI,CAAC,KAAK;UAAC,OAAO,EAAC,UAAU;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eACpD,QAAC,IAAI,CAAC,OAAO;UACX,IAAI,EAAC,UAAU;UACf,WAAW,EAAC,eAAe;UAC3B,IAAI,EAAC,UAAU;UACf,QAAQ,EAAEO,iBAAkB;UAC5B,KAAK,EAAET,YAAY,CAACG,QAAS;UAC7B,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACR,eACF,QAAC,IAAI,CAAC,OAAO,CAAC,QAAQ;UAAC,IAAI,EAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA8C;MAAA;QAAA;QAAA;QAAA;MAAA,QACxE,eACb,QAAC,MAAM;QACL,QAAQ,EAAE,EAAEH,YAAY,CAACE,KAAK,IAAIF,YAAY,CAACG,QAAQ,CAAE;QACzD,IAAI,EAAC,QAAQ;QACb,OAAO,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEV;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ,iBACN;AAEP,CAAC;AAAC,GApFIJ,SAAS;EAAA,QAI0BH,WAAW;AAAA;AAAA,KAJ9CG,SAAS;AAsFf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}