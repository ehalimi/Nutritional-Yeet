{"ast":null,"code":"import _slicedToArray from \"/Users/emahalimi/projects/book-search/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/emahalimi/projects/book-search/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n */\nexport function UniqueArgumentNamesRule(context) {\n  return {\n    Field: checkArgUniqueness,\n    Directive: checkArgUniqueness\n  };\n  function checkArgUniqueness(parentNode) {\n    var _parentNode$arguments;\n\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    var argumentNodes = (_parentNode$arguments = parentNode.arguments) !== null && _parentNode$arguments !== void 0 ? _parentNode$arguments : [];\n    var seenArgs = groupBy(argumentNodes, function (arg) {\n      return arg.name.value;\n    });\n    var _iterator = _createForOfIteratorHelper(seenArgs),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n          argName = _step$value[0],\n          argNodes = _step$value[1];\n        if (argNodes.length > 1) {\n          context.reportError(new GraphQLError(\"There can be only one argument named \\\"\".concat(argName, \"\\\".\"), {\n            nodes: argNodes.map(function (node) {\n              return node.name;\n            })\n          }));\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n}","map":{"version":3,"names":["groupBy","GraphQLError","UniqueArgumentNamesRule","context","Field","checkArgUniqueness","Directive","parentNode","_parentNode$arguments","argumentNodes","arguments","seenArgs","arg","name","value","argName","argNodes","length","reportError","nodes","map","node"],"sources":["/Users/emahalimi/projects/book-search/client/node_modules/graphql/validation/rules/UniqueArgumentNamesRule.mjs"],"sourcesContent":["import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n */\nexport function UniqueArgumentNamesRule(context) {\n  return {\n    Field: checkArgUniqueness,\n    Directive: checkArgUniqueness,\n  };\n\n  function checkArgUniqueness(parentNode) {\n    var _parentNode$arguments;\n\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const argumentNodes =\n      (_parentNode$arguments = parentNode.arguments) !== null &&\n      _parentNode$arguments !== void 0\n        ? _parentNode$arguments\n        : [];\n    const seenArgs = groupBy(argumentNodes, (arg) => arg.name.value);\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one argument named \"${argName}\".`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n  }\n}\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,2BAA2B;AACnD,SAASC,YAAY,QAAQ,8BAA8B;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,uBAAuB,CAACC,OAAO,EAAE;EAC/C,OAAO;IACLC,KAAK,EAAEC,kBAAkB;IACzBC,SAAS,EAAED;EACb,CAAC;EAED,SAASA,kBAAkB,CAACE,UAAU,EAAE;IACtC,IAAIC,qBAAqB;;IAEzB;;IAEA;IACA,IAAMC,aAAa,GACjB,CAACD,qBAAqB,GAAGD,UAAU,CAACG,SAAS,MAAM,IAAI,IACvDF,qBAAqB,KAAK,KAAK,CAAC,GAC5BA,qBAAqB,GACrB,EAAE;IACR,IAAMG,QAAQ,GAAGX,OAAO,CAACS,aAAa,EAAE,UAACG,GAAG;MAAA,OAAKA,GAAG,CAACC,IAAI,CAACC,KAAK;IAAA,EAAC;IAAC,2CAE/BH,QAAQ;MAAA;IAAA;MAA1C,oDAA4C;QAAA;UAAhCI,OAAO;UAAEC,QAAQ;QAC3B,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;UACvBd,OAAO,CAACe,WAAW,CACjB,IAAIjB,YAAY,kDAC2Bc,OAAO,UAChD;YACEI,KAAK,EAAEH,QAAQ,CAACI,GAAG,CAAC,UAACC,IAAI;cAAA,OAAKA,IAAI,CAACR,IAAI;YAAA;UACzC,CAAC,CACF,CACF;QACH;MACF;IAAC;MAAA;IAAA;MAAA;IAAA;EACH;AACF"},"metadata":{},"sourceType":"module"}