{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    split = _ref.split,\n    className = _ref.className,\n    children = _ref.children,\n    childBsPrefix = _ref.childBsPrefix,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? Button : _ref$as,\n    props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"children\", \"childBsPrefix\", \"as\"]);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  var _useDropdownToggle = useDropdownToggle(),\n    toggleProps = _useDropdownToggle[0],\n    toggle = _useDropdownToggle[1].toggle;\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    onClick: toggle,\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props), children);\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","classNames","isRequiredForA11y","React","useDropdownToggle","useMergedRefs","Button","useBootstrapPrefix","useWrappedRefWithWarning","DropdownToggle","forwardRef","_ref","ref","bsPrefix","split","className","children","childBsPrefix","_ref$as","as","Component","props","prefix","undefined","_useDropdownToggle","toggleProps","toggle","createElement","onClick","displayName"],"sources":["/Users/emahalimi/projects/Nutritional-Yeet/client/node_modules/react-bootstrap/esm/DropdownToggle.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      children = _ref.children,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"children\", \"childBsPrefix\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0],\n      toggle = _useDropdownToggle[1].toggle;\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    onClick: toggle,\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props), children);\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,iBAAiB,MAAM,wCAAwC;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,OAAOC,aAAa,MAAM,8BAA8B;AACxD,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,IAAIC,cAAc,GAAGN,KAAK,CAACO,UAAU,CAAC,UAAUC,IAAI,EAAEC,GAAG,EAAE;EACzD,IAAIC,QAAQ,GAAGF,IAAI,CAACE,QAAQ;IACxBC,KAAK,GAAGH,IAAI,CAACG,KAAK;IAClBC,SAAS,GAAGJ,IAAI,CAACI,SAAS;IAC1BC,QAAQ,GAAGL,IAAI,CAACK,QAAQ;IACxBC,aAAa,GAAGN,IAAI,CAACM,aAAa;IAClCC,OAAO,GAAGP,IAAI,CAACQ,EAAE;IACjBC,SAAS,GAAGF,OAAO,KAAK,KAAK,CAAC,GAAGZ,MAAM,GAAGY,OAAO;IACjDG,KAAK,GAAGrB,6BAA6B,CAACW,IAAI,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;EAEtH,IAAIW,MAAM,GAAGf,kBAAkB,CAACM,QAAQ,EAAE,iBAAiB,CAAC;EAE5D,IAAII,aAAa,KAAKM,SAAS,EAAE;IAC/BF,KAAK,CAACR,QAAQ,GAAGI,aAAa;EAChC;EAEA,IAAIO,kBAAkB,GAAGpB,iBAAiB,EAAE;IACxCqB,WAAW,GAAGD,kBAAkB,CAAC,CAAC,CAAC;IACnCE,MAAM,GAAGF,kBAAkB,CAAC,CAAC,CAAC,CAACE,MAAM;EAEzCD,WAAW,CAACb,GAAG,GAAGP,aAAa,CAACoB,WAAW,CAACb,GAAG,EAAEJ,wBAAwB,CAACI,GAAG,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACnG;;EAEA,OAAO,aAAaT,KAAK,CAACwB,aAAa,CAACP,SAAS,EAAErB,QAAQ,CAAC;IAC1D6B,OAAO,EAAEF,MAAM;IACfX,SAAS,EAAEd,UAAU,CAACc,SAAS,EAAEO,MAAM,EAAER,KAAK,IAAIQ,MAAM,GAAG,QAAQ;EACrE,CAAC,EAAEG,WAAW,EAAEJ,KAAK,CAAC,EAAEL,QAAQ,CAAC;AACnC,CAAC,CAAC;AACFP,cAAc,CAACoB,WAAW,GAAG,gBAAgB;AAC7C,eAAepB,cAAc"},"metadata":{},"sourceType":"module"}